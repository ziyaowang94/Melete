// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: proto/pyramid/shardinfo/shardinfo.proto

package shardinfo

import (
	p2p "emulator/proto/utils/p2p"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerList       map[string]*RepeatedPeers  `protobuf:"bytes,1,rep,name=peerList,proto3" json:"peerList,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RelatedShards  map[string]bool            `protobuf:"bytes,2,rep,name=relatedShards,proto3" json:"relatedShards,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	PeerRelatedMap map[string]*RepeatedString `protobuf:"bytes,4,rep,name=peer_related_map,json=peerRelatedMap,proto3" json:"peer_related_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ShardIdentity  int32                      `protobuf:"varint,5,opt,name=shard_identity,json=shardIdentity,proto3" json:"shard_identity,omitempty"`
}

func (x *ShardInfo) Reset() {
	*x = ShardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pyramid_shardinfo_shardinfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfo) ProtoMessage() {}

func (x *ShardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pyramid_shardinfo_shardinfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfo.ProtoReflect.Descriptor instead.
func (*ShardInfo) Descriptor() ([]byte, []int) {
	return file_proto_pyramid_shardinfo_shardinfo_proto_rawDescGZIP(), []int{0}
}

func (x *ShardInfo) GetPeerList() map[string]*RepeatedPeers {
	if x != nil {
		return x.PeerList
	}
	return nil
}

func (x *ShardInfo) GetRelatedShards() map[string]bool {
	if x != nil {
		return x.RelatedShards
	}
	return nil
}

func (x *ShardInfo) GetPeerRelatedMap() map[string]*RepeatedString {
	if x != nil {
		return x.PeerRelatedMap
	}
	return nil
}

func (x *ShardInfo) GetShardIdentity() int32 {
	if x != nil {
		return x.ShardIdentity
	}
	return 0
}

type RepeatedPeers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peers []*p2p.Peer `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *RepeatedPeers) Reset() {
	*x = RepeatedPeers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pyramid_shardinfo_shardinfo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedPeers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedPeers) ProtoMessage() {}

func (x *RepeatedPeers) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pyramid_shardinfo_shardinfo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedPeers.ProtoReflect.Descriptor instead.
func (*RepeatedPeers) Descriptor() ([]byte, []int) {
	return file_proto_pyramid_shardinfo_shardinfo_proto_rawDescGZIP(), []int{1}
}

func (x *RepeatedPeers) GetPeers() []*p2p.Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type RepeatedString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str []string `protobuf:"bytes,1,rep,name=str,proto3" json:"str,omitempty"`
}

func (x *RepeatedString) Reset() {
	*x = RepeatedString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pyramid_shardinfo_shardinfo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedString) ProtoMessage() {}

func (x *RepeatedString) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pyramid_shardinfo_shardinfo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedString.ProtoReflect.Descriptor instead.
func (*RepeatedString) Descriptor() ([]byte, []int) {
	return file_proto_pyramid_shardinfo_shardinfo_proto_rawDescGZIP(), []int{2}
}

func (x *RepeatedString) GetStr() []string {
	if x != nil {
		return x.Str
	}
	return nil
}

var File_proto_pyramid_shardinfo_shardinfo_proto protoreflect.FileDescriptor

var file_proto_pyramid_shardinfo_shardinfo_proto_rawDesc = []byte{
	0x0a, 0x27, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70, 0x79, 0x72, 0x61, 0x6d,
	0x69, 0x64, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x1a, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70, 0x32, 0x70, 0x2f, 0x70, 0x65,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x04, 0x0a, 0x09, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d,
	0x69, 0x64, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x55,
	0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x5a, 0x0a, 0x10, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0e, 0x70, 0x65, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61,
	0x70, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x5d, 0x0a, 0x0d, 0x50, 0x65, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x79, 0x72,
	0x61, 0x6d, 0x69, 0x64, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a, 0x13, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x36, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x12, 0x25, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x70, 0x32, 0x70, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0x22, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x42, 0x22, 0x5a, 0x20, 0x65,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x79,
	0x72, 0x61, 0x6d, 0x69, 0x64, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_pyramid_shardinfo_shardinfo_proto_rawDescOnce sync.Once
	file_proto_pyramid_shardinfo_shardinfo_proto_rawDescData = file_proto_pyramid_shardinfo_shardinfo_proto_rawDesc
)

func file_proto_pyramid_shardinfo_shardinfo_proto_rawDescGZIP() []byte {
	file_proto_pyramid_shardinfo_shardinfo_proto_rawDescOnce.Do(func() {
		file_proto_pyramid_shardinfo_shardinfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_pyramid_shardinfo_shardinfo_proto_rawDescData)
	})
	return file_proto_pyramid_shardinfo_shardinfo_proto_rawDescData
}

var file_proto_pyramid_shardinfo_shardinfo_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_pyramid_shardinfo_shardinfo_proto_goTypes = []any{
	(*ShardInfo)(nil),      // 0: pyramid.shardinfo.ShardInfo
	(*RepeatedPeers)(nil),  // 1: pyramid.shardinfo.RepeatedPeers
	(*RepeatedString)(nil), // 2: pyramid.shardinfo.RepeatedString
	nil,                    // 3: pyramid.shardinfo.ShardInfo.PeerListEntry
	nil,                    // 4: pyramid.shardinfo.ShardInfo.RelatedShardsEntry
	nil,                    // 5: pyramid.shardinfo.ShardInfo.PeerRelatedMapEntry
	(*p2p.Peer)(nil),       // 6: utils.p2p.Peer
}
var file_proto_pyramid_shardinfo_shardinfo_proto_depIdxs = []int32{
	3, // 0: pyramid.shardinfo.ShardInfo.peerList:type_name -> pyramid.shardinfo.ShardInfo.PeerListEntry
	4, // 1: pyramid.shardinfo.ShardInfo.relatedShards:type_name -> pyramid.shardinfo.ShardInfo.RelatedShardsEntry
	5, // 2: pyramid.shardinfo.ShardInfo.peer_related_map:type_name -> pyramid.shardinfo.ShardInfo.PeerRelatedMapEntry
	6, // 3: pyramid.shardinfo.RepeatedPeers.peers:type_name -> utils.p2p.Peer
	1, // 4: pyramid.shardinfo.ShardInfo.PeerListEntry.value:type_name -> pyramid.shardinfo.RepeatedPeers
	2, // 5: pyramid.shardinfo.ShardInfo.PeerRelatedMapEntry.value:type_name -> pyramid.shardinfo.RepeatedString
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_pyramid_shardinfo_shardinfo_proto_init() }
func file_proto_pyramid_shardinfo_shardinfo_proto_init() {
	if File_proto_pyramid_shardinfo_shardinfo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_pyramid_shardinfo_shardinfo_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ShardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pyramid_shardinfo_shardinfo_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RepeatedPeers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pyramid_shardinfo_shardinfo_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RepeatedString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_pyramid_shardinfo_shardinfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_pyramid_shardinfo_shardinfo_proto_goTypes,
		DependencyIndexes: file_proto_pyramid_shardinfo_shardinfo_proto_depIdxs,
		MessageInfos:      file_proto_pyramid_shardinfo_shardinfo_proto_msgTypes,
	}.Build()
	File_proto_pyramid_shardinfo_shardinfo_proto = out.File
	file_proto_pyramid_shardinfo_shardinfo_proto_rawDesc = nil
	file_proto_pyramid_shardinfo_shardinfo_proto_goTypes = nil
	file_proto_pyramid_shardinfo_shardinfo_proto_depIdxs = nil
}
