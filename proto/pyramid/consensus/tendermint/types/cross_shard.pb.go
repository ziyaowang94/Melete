// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.26.1
// source: proto/pyramid/consensus/tendermint/types/cross_shard.proto

package types

import (
	types "emulator/proto/pyramid/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CrossShardBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block                *types.Block         `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	CollectiveSignatures *PrecommitAggregated `protobuf:"bytes,2,opt,name=collective_signatures,json=collectiveSignatures,proto3" json:"collective_signatures,omitempty"`
}

func (x *CrossShardBlock) Reset() {
	*x = CrossShardBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossShardBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossShardBlock) ProtoMessage() {}

func (x *CrossShardBlock) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossShardBlock.ProtoReflect.Descriptor instead.
func (*CrossShardBlock) Descriptor() ([]byte, []int) {
	return file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescGZIP(), []int{0}
}

func (x *CrossShardBlock) GetBlock() *types.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *CrossShardBlock) GetCollectiveSignatures() *PrecommitAggregated {
	if x != nil {
		return x.CollectiveSignatures
	}
	return nil
}

type MessageAccept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BBlockHash           []byte               `protobuf:"bytes,1,opt,name=b_block_hash,json=bBlockHash,proto3" json:"b_block_hash,omitempty"`
	CollectiveSignatures *PrecommitAggregated `protobuf:"bytes,2,opt,name=collective_signatures,json=collectiveSignatures,proto3" json:"collective_signatures,omitempty"`
}

func (x *MessageAccept) Reset() {
	*x = MessageAccept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAccept) ProtoMessage() {}

func (x *MessageAccept) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAccept.ProtoReflect.Descriptor instead.
func (*MessageAccept) Descriptor() ([]byte, []int) {
	return file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescGZIP(), []int{1}
}

func (x *MessageAccept) GetBBlockHash() []byte {
	if x != nil {
		return x.BBlockHash
	}
	return nil
}

func (x *MessageAccept) GetCollectiveSignatures() *PrecommitAggregated {
	if x != nil {
		return x.CollectiveSignatures
	}
	return nil
}

type MessageAcceptSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash []byte           `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Accepts   []*MessageAccept `protobuf:"bytes,2,rep,name=accepts,proto3" json:"accepts,omitempty"`
}

func (x *MessageAcceptSet) Reset() {
	*x = MessageAcceptSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAcceptSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAcceptSet) ProtoMessage() {}

func (x *MessageAcceptSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAcceptSet.ProtoReflect.Descriptor instead.
func (*MessageAcceptSet) Descriptor() ([]byte, []int) {
	return file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescGZIP(), []int{2}
}

func (x *MessageAcceptSet) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *MessageAcceptSet) GetAccepts() []*MessageAccept {
	if x != nil {
		return x.Accepts
	}
	return nil
}

type MessageCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BBlockHash           []byte               `protobuf:"bytes,1,opt,name=b_block_hash,json=bBlockHash,proto3" json:"b_block_hash,omitempty"`
	CollectiveSignatures *PrecommitAggregated `protobuf:"bytes,2,opt,name=collective_signatures,json=collectiveSignatures,proto3" json:"collective_signatures,omitempty"`
}

func (x *MessageCommit) Reset() {
	*x = MessageCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommit) ProtoMessage() {}

func (x *MessageCommit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommit.ProtoReflect.Descriptor instead.
func (*MessageCommit) Descriptor() ([]byte, []int) {
	return file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescGZIP(), []int{3}
}

func (x *MessageCommit) GetBBlockHash() []byte {
	if x != nil {
		return x.BBlockHash
	}
	return nil
}

func (x *MessageCommit) GetCollectiveSignatures() *PrecommitAggregated {
	if x != nil {
		return x.CollectiveSignatures
	}
	return nil
}

type MessageOK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain_ID string `protobuf:"bytes,1,opt,name=chain_ID,json=chainID,proto3" json:"chain_ID,omitempty"`
	Height   int64  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MessageOK) Reset() {
	*x = MessageOK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOK) ProtoMessage() {}

func (x *MessageOK) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOK.ProtoReflect.Descriptor instead.
func (*MessageOK) Descriptor() ([]byte, []int) {
	return file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescGZIP(), []int{4}
}

func (x *MessageOK) GetChain_ID() string {
	if x != nil {
		return x.Chain_ID
	}
	return ""
}

func (x *MessageOK) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

var File_proto_pyramid_consensus_tendermint_types_cross_shard_proto protoreflect.FileDescriptor

var file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2f,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x73,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x70, 0x79,
	0x72, 0x61, 0x6d, 0x69, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x33, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64,
	0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x6f, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x79, 0x72, 0x61,
	0x6d, 0x69, 0x64, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x6c, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x52, 0x14,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x62, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x6c, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x79, 0x72, 0x61, 0x6d, 0x69,
	0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x14, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x7e, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x4b, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x79, 0x72,
	0x61, 0x6d, 0x69, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x62, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x6c, 0x0a, 0x15, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x79, 0x72, 0x61,
	0x6d, 0x69, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2e, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x14, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x4b, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x33, 0x5a, 0x31, 0x65, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x79, 0x72, 0x61, 0x6d,
	0x69, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2f, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescOnce sync.Once
	file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescData = file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDesc
)

func file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescGZIP() []byte {
	file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescOnce.Do(func() {
		file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescData)
	})
	return file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDescData
}

var file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_goTypes = []any{
	(*CrossShardBlock)(nil),     // 0: pyramid.consensus.tendermint.types.CrossShardBlock
	(*MessageAccept)(nil),       // 1: pyramid.consensus.tendermint.types.MessageAccept
	(*MessageAcceptSet)(nil),    // 2: pyramid.consensus.tendermint.types.MessageAcceptSet
	(*MessageCommit)(nil),       // 3: pyramid.consensus.tendermint.types.MessageCommit
	(*MessageOK)(nil),           // 4: pyramid.consensus.tendermint.types.MessageOK
	(*types.Block)(nil),         // 5: pyramid.types.Block
	(*PrecommitAggregated)(nil), // 6: pyramid.consensus.tendermint.types.PrecommitAggregated
}
var file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_depIdxs = []int32{
	5, // 0: pyramid.consensus.tendermint.types.CrossShardBlock.block:type_name -> pyramid.types.Block
	6, // 1: pyramid.consensus.tendermint.types.CrossShardBlock.collective_signatures:type_name -> pyramid.consensus.tendermint.types.PrecommitAggregated
	6, // 2: pyramid.consensus.tendermint.types.MessageAccept.collective_signatures:type_name -> pyramid.consensus.tendermint.types.PrecommitAggregated
	1, // 3: pyramid.consensus.tendermint.types.MessageAcceptSet.accepts:type_name -> pyramid.consensus.tendermint.types.MessageAccept
	6, // 4: pyramid.consensus.tendermint.types.MessageCommit.collective_signatures:type_name -> pyramid.consensus.tendermint.types.PrecommitAggregated
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_init() }
func file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_init() {
	if File_proto_pyramid_consensus_tendermint_types_cross_shard_proto != nil {
		return
	}
	file_proto_pyramid_consensus_tendermint_types_vote_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CrossShardBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MessageAccept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MessageAcceptSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MessageCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MessageOK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_goTypes,
		DependencyIndexes: file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_depIdxs,
		MessageInfos:      file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_msgTypes,
	}.Build()
	File_proto_pyramid_consensus_tendermint_types_cross_shard_proto = out.File
	file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_rawDesc = nil
	file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_goTypes = nil
	file_proto_pyramid_consensus_tendermint_types_cross_shard_proto_depIdxs = nil
}
